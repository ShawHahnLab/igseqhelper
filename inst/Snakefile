"""
Processing steps from raw read data to finalized antibody results.
"""

BASEDIR = Path(workflow.current_basedir)
import sys
sys.path.append(str(BASEDIR/"python"))
import igseqhelper as igseq
import logging
from snakemake.utils import R
RINST = igseq.R_PKG_INST

LOGGER = logging.getLogger(__name__)


wildcard_constraints:
    # project metadata
    sample="[A-Za-z0-9]+",
    specimen="[A-Za-z0-9]+",
    subject="[A-Za-z0-9]+",
    run="[-_A-Za-z0-9]+",
    # antibody concepts
    chain="(heavy|light)",
    chain_type="(alpha|delta|gamma|mu|epsilon|kappa|lambda)",
    segment="(V|D|J)",
    antibody_type="(IgA|IgD|IgG|IgM|IgE)",
    antibody_isolate=r"[-_A-Za-z0-9\.]+",
    antibody_lineage=r"[-_A-Za-z0-9\.]+",
    # other flow control
    chunk="[0-9]+",
    rp="(R1|R2|I1|I2)"

include: "snakemake-rules/metadata.smk"
include: "snakemake-rules/by-run.smk"
#include: "snakemake-rules/by-specimen/by-specimen.smk"
include: "snakemake-rules/igdiscover.smk"
include: "snakemake-rules/sonar-new.smk"
#include: "snakemake-rules/by-subject/by-subject.smk"
include: "snakemake-rules/igblast.smk"
#include: "snakemake-rules/reporting.smk"

## TODO this should be the final sonar output, once up to date, and should
## automatically pull in igdiscover.
#TARGET_ALL = TARGET_IGDISCOVER_ALL + TARGETS_SONAR["module_1"] + TARGET_REPORT_ALL
#rule all:
#    input: TARGET_ALL
